{{

<<EOM
;;; this file was automatically generated from
;;; ${\ $dist->name }-${\ $dist->version }/profiles/github/profile.ini
EOM
}}
[TemplateModule/:DefaultModuleMaker]
template = Module.pm

; not used, because we want to template bits of this.
; [DistINI]
; append_file = plugins.ini

; so subsequent plugins can call $zilla->distmeta and not blow up
[AutoVersion]
format = 0.001

; for metadata used in initial CONTRIBUTING file
[GithubMeta]
issues = 1
[AutoMetaResources]

[GatherDir::Template]
root = skel

[ReadmeAnyFromPod]
type = pod
location = build

[License]
:version = 5.038
filename = LICENCE

[GenerateFile::FromShareDir]
-dist = Dist-Zilla-PluginBundle-Author-ETHER
-filename = CONTRIBUTING

; we could put these files into share/profiles/github/skel/ but they are so short..

[GenerateFile / gitattributes]
filename = .gitattributes
content = *.pl linguist-language=Perl whitespace=trailing-space,space-before-tab,tab-in-indent
content = *.pm linguist-language=Perl whitespace=trailing-space,space-before-tab,tab-in-indent
content = *.t linguist-language=Perl whitespace=trailing-space,space-before-tab,tab-in-indent

[GenerateFile / gitignore]
filename = .gitignore
is_template = 1
content = /.ackrc
content = /.build/
content = !/.gitignore
content = /.latest
content = /TODO*
content = /{{ '{{$dist->name}}' }}-*/
content = /{{ '{{$dist->name}}' }}-*.tar.gz

[GenerateFile / ackrc]
filename = .ackrc
content = --ignore-dir=.latest

[GenerateFile / mailmap]
filename = .mailmap
content = # https://www.kernel.org/pub/software/scm/git/docs/git-shortlog.html#_mapping_authors

[GenerateFile / Changes]
filename = Changes
is_template = 1 ; needed for whitespace
content = Revision history for {{ q[{{$dist->name}}] }}
content =
content = {{ q[{{ '{{$NEXT}}' }}] }}
content = {{ q[{{ '         ' }}] }} - Initial release.

[PruneFiles / weaver.ini]
filename = weaver.ini ; may be present via sharedir of older installations

[Git::Init]
commit_message = initial commit%n%nvia [Git::Init] in {{ $dist->name }}-{{ $dist->version }}, github profile.
config = user.email ether@cpan.org
; we don't configure a repository here because [GitHub::Create] won't do its
; thing if there is already a remote spec added.

[GitHub::Create]
:version = 0.35
prompt = 1
has_issues = 0

; this will fail if we said no to creating the github repository
[Git::PushInitial]

[Run::AfterMint]
run = echo "You should now do: cd %d"
